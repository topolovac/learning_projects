<div class=\"main\"><h1>Create Your Lick</h1><p class=\"description\">Fill in the details and upload or record a sample to share your unique sound with the world.</p><form class=\"form-container\" hx-encoding=\"multipart/form-data\" hx-post=\"/publish-sample\"><div class=\"form-group\"><label for=\"songname\">Song Name</label> <input id=\"songname\" name=\"songname\" type=\"text\" placeholder=\"Enter song name\" required></div><div class=\"form-group\"><label for=\"songdescription\">Song Description</label> <textarea id=\"songdescription\" name=\"songdescription\" placeholder=\"A short description\" rows=\"3\"></textarea></div><div class=\"audio-container\"><h2>Record Audio Sample or Upload File</h2><div class=\"recording-controls\"><button id=\"startButton\" class=\"record-button\">Start Recording</button> <button id=\"stopButton\" class=\"record-button\" disabled>Stop Recording</button></div><audio id=\"audioPlayback\" controls class=\"audio-player\"></audio></div><h3 style=\"text-align: center; width: 100%\">or</h3><div class=\"form-group\"><label for=\"audiosample\">Upload Audio Sample</label> <input id=\"audiosample\" name=\"audiosample\" type=\"file\" required></div><button type=\"submit\" class=\"green-button\">Publish Lick</button></form></div>
<style>\n\t\t.description {\n\t\t\ttext-align: center;\n\t\t\tfont-size: 1rem;\n\t\t\tcolor: #666;\n\t\t\tmargin-bottom: 1.5rem;\n\t\t}\n\t\t.form-container, .audio-container {\n\t\t\tmargin-bottom: 2rem;\n\t\t}\n\t\t.form-group {\n\t\t\tmargin-bottom: 1rem;\n\t\t}\n\t\tlabel {\n\t\t\tdisplay: block;\n\t\t\tmargin-bottom: 0.25rem;\n\t\t\tfont-weight: 600;\n\t\t\tcolor: #333;\n\t\t}\n\t\tinput[type=\"text\"], textarea, input[type=\"file\"] {\n\t\t\twidth: 100%;\n\t\t\tpadding: 0.5rem;\n\t\t\tfont-size: 1rem;\n\t\t\tborder: 1px solid #ccc;\n\t\t\tborder-radius: 4px;\n\t\t\tbox-sizing: border-box;\n\t\t}\n\t\t.recording-controls {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\tgap: 1rem;\n\t\t}\n\t\t.record-button {\n\t\t\tpadding: 0.5rem 1rem;\n\t\t\tfont-size: 1rem;\n\t\t\tcursor: pointer;\n\t\t\tborder: none;\n\t\t\tborder-radius: 4px;\n\t\t\tcolor: white;\n\t\t\tbackground-color: #656565;\n\t\t\ttransition: background-color 0.3s;\n\t\t}\n\t\t.record-button:disabled {\n\t\t\tbackground-color: #ffffff00;\n\t\t\tcursor: not-allowed;\n\t\t}\n\t\t.record-button:hover:not(:disabled) {\n\t\t\tbackground-color: #555;\n\t\t}\n\t\t.audio-player {\n\t\t\twidth: 100%;\n\t\t\tmargin-top: 1rem;\n\t\t}\n\t</style><script>\n\t\tlet mediaRecorder;\n\t\tlet recordedChunks = [];\n\n\t\tdocument.getElementById('startButton').addEventListener('click', async () => {\n\t\t\tconst stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n\t\t\tmediaRecorder = new MediaRecorder(stream);\n\n\t\t\tdocument.getElementById('startButton').disabled = true;\n\t\t\tdocument.getElementById('stopButton').disabled = false;\n\n\t\t\tmediaRecorder.ondataavailable = (event) => {\n\t\t\t\tif (event.data.size > 0) recordedChunks.push(event.data);\n\t\t\t};\n\n\t\t\tmediaRecorder.onstop = () => {\n\t\t\t\tconst audioBlob = new Blob(recordedChunks, { type: 'audio/webm' });\n\t\t\t\tconst audioUrl = URL.createObjectURL(audioBlob);\n\t\t\t\tdocument.getElementById('audioPlayback').src = audioUrl;\n\n\t\t\t\tdocument.getElementById('startButton').disabled = false;\n\t\t\t\tdocument.getElementById('stopButton').disabled = true;\n\t\t\t\trecordedChunks = [];\n\n\t\t\t\tconst audioFile = new File([audioBlob], \"audioSample.webm\", { type: \"audio/webm\" });\n\t\t\t\tconst dataTransfer = new DataTransfer();\n\t\t\t\tdataTransfer.items.add(audioFile);\n\t\t\t\tconst sampleInput = document.getElementById(\"audiosample\");\n\t\t\t\tsampleInput.files = dataTransfer.files;\n\t\t\t};\n\n\t\t\tmediaRecorder.start();\n\t\t});\n\n\t\tdocument.getElementById('stopButton').addEventListener('click', () => {\n\t\t\tmediaRecorder.stop();\n\t\t});\n\t</script>
